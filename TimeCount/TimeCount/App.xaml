<Application x:Class="TimeCount.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Converters="clr-namespace:TimeCount.Converters"
             xmlns:Controls="clr-namespace:TimeCount.Controls"
             SessionEnding="App_SessionEnding"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}" BasedOn="{x:Null}">
                <Setter Property="Foreground" Value="{DynamicResource InputText}"/>
                <Setter Property="Background" Value="{DynamicResource InputBackground}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="2,1,1,1"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="SelectionBrush" Value="{DynamicResource Accent}" />
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Border BorderThickness="1" BorderBrush="#FFdc000c" VerticalAlignment="Top">
                                    <Grid>
                                        <AdornedElementPlaceholder x:Name="adorner" Margin="-1"/>
                                    </Grid>
                                </Border>
                                <Border x:Name="errorBorder" Background="#FFdc000c" Margin="8,0,0,0"
                                Opacity="0" CornerRadius="0"
                                IsHitTestVisible="False"
                                MinHeight="24" >
                                    <TextBlock Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                                       Foreground="White" Margin="8,2,8,3" TextWrapping="Wrap" VerticalAlignment="Center"/>
                                </Border>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocused" />
                                    </DataTrigger.Binding>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard x:Name="fadeInStoryboard">
                                            <Storyboard>
                                                <DoubleAnimation Duration="00:00:00.15"
                                                         Storyboard.TargetName="errorBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                                        <BeginStoryboard x:Name="fadeOutStoryBoard">
                                            <Storyboard>
                                                <DoubleAnimation Duration="00:00:00"
                                                         Storyboard.TargetName="errorBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="Bd"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                                <ScrollViewer x:Name="PART_ContentHost" RenderOptions.ClearTypeHint="Enabled"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}"/>
                                </Trigger>
                                <Trigger Property="IsReadOnly" Value="true">
                                    <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Accent}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsReadOnly" Value="False"/>
                                        <Condition Property="IsEnabled" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource InputTextHover}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type TextBox}">
            </Style>
            <Style BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type RichTextBox}">
            </Style>























            <!--default accent colors and brushes-->
            <Color x:Key="AccentColor">#1ba1e2</Color>

            <SolidColorBrush x:Key="Accent" Color="{DynamicResource AccentColor}" />

            <SolidColorBrush x:Key="Foreground" Color="Black" />
            <!--Modern BTN-->
            <Style x:Key="ModernBtn" TargetType="Controls:ModernButton">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{DynamicResource ModernButtonText}" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Controls:ModernButton">
                            <Grid x:Name="grid" Background="Transparent" Margin="{TemplateBinding Padding}" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Grid Width="{TemplateBinding EllipseDiameter}"
                              Height="{TemplateBinding EllipseDiameter}">
                                    <Ellipse x:Name="ellipse"
                                     Stroke="{DynamicResource ModernButtonBorder}"
                                     StrokeThickness="{TemplateBinding EllipseStrokeThickness}"
                                     VerticalAlignment="Stretch" />
                                    <Path x:Name="icon"
                                  Data="{TemplateBinding IconData}" 
                                  Width="{TemplateBinding IconWidth}"
                                  Height="{TemplateBinding IconHeight}"
                                  Fill="{TemplateBinding Foreground}"
                                  Stretch="Uniform" HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                                </Grid>
                                <!--<Grid Grid.Column="1" >
                            <TextBlock DataContext="{TemplateBinding Content}"
                                       Visibility="{Binding Converter={StaticResource NullOrEmptyStringToVisibilityConverter}, ConverterParameter=inverse}"
                                       Text="{Binding Converter={StaticResource ToLowerConverter}}"
                                       TextTrimming="CharacterEllipsis"
                                       Foreground="{TemplateBinding Foreground}"
                                       Margin="4,-1,0,0"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>-->
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextHover}" />
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource ModernButtonBorderHover}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextPressed}" />
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource ModernButtonBorderPressed}" />
                                    <Setter TargetName="ellipse" Property="Fill" Value="{DynamicResource ModernButtonIconBackgroundPressed}" />
                                    <Setter TargetName="icon" Property="Fill" Value="{DynamicResource ModernButtonIconForegroundPressed}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextDisabled}" />
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource ModernButtonBorderDisabled}" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource Accent}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <!--Round navigation btn style-->
            <!--<Style x:Key="arrowBack" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid >
                                <Viewbox>
                                    <Grid>
                                        --><!--<Path x:Name="arrowTop" 
                                        Stretch="Fill" StrokeThickness="6" StrokeStartLineCap="Round" StrokeEndLineCap="Round"   
                                        StrokeLineJoin="Round"    
                                        Data="F1 M 48.5143,170L 144.514,73.9999L 195.514,74L 121.515,150L 304.514,150L 304.514,190L 121.514,190L 195.514,266L 144.514,266L 48.5143,170 Z " RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>--><!--
                                        <Path x:Name="arrow" Width="262" Height="198"    
                                        Stretch="Fill" StrokeThickness="6" StrokeStartLineCap="Round" StrokeEndLineCap="Round"   
                                        StrokeLineJoin="Round" Fill="{DynamicResource FontColor}"   
                                        Data="F1 M 48.5143,170L 144.514,73.9999L 195.514,74L 121.515,150L 304.514,150L 304.514,190L 121.514,190L 195.514,266L 144.514,266L 48.5143,170 Z " RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                        <Ellipse x:Name="ellipse" Width="340" Height="340" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" StrokeThickness="15" StrokeLineJoin="Round" Opacity=".6" Stroke="{DynamicResource FontColor}" Fill="Transparent" />
                                    </Grid>
                                </Viewbox>
                                --><!--<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>--><!--
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ellipse" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    --><!--<Setter TargetName="ellipse" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect BlurRadius="50" ShadowDepth="0" RenderingBias="Performance" Color="White" Opacity=".75" />
                                        </Setter.Value>
                                    </Setter>--><!--
                                    <Setter TargetName="arrow" Property="Effect">
                                        <Setter.Value>
                                            <BlurEffect Radius="40" RenderingBias="Performance" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->
            <!--Round navigation btn style/-->
            
            <!--windows style-->
            <Style x:Key="WindowBase"
                   TargetType="Window">
                <Setter Property="Background"
                        Value="{DynamicResource WindowBackgroundBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource WindowBorderBrush}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="WindowStyle"
                        Value="None" />
                <Setter Property="FontFamily"
                        Value="{DynamicResource DefaultFontFamily}" />
                <Setter Property="AllowsTransparency"
                        Value="True" />
            </Style>
            <Style BasedOn="{StaticResource WindowBase}"
                   TargetType="Window"
                   x:Key="WindowStyle">
                <Setter Property="RenderOptions.BitmapScalingMode"
                        Value="LowQuality" />
                <Setter Property="RenderOptions.EdgeMode"
                        Value="Unspecified" />
                <Setter Property="BorderThickness"
                        Value="1" />
            </Style>
            <!--windows style/-->


            <!--label style-->
            <Style TargetType="Label">
                <Setter Property="Label.FontFamily"
                        Value="{DynamicResource DefaultFontFamily}" />
                <Setter Property="Label.FontSize"
                        Value="13" />
                <Setter Property="Label.Foreground"
                        Value="{DynamicResource FontColor}" />
                <Setter Property="Label.Height"
                        Value="Auto" />
                <Setter Property="Label.Width"
                        Value="Auto" />
                <!--<Setter Property="Label.HorizontalAlignment"
                        Value="Center" />
                <Setter Property="Label.VerticalAlignment"
                        Value="Center" />
                <Setter Property="Label.HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="Label.VerticalContentAlignment"
                        Value="Center" />-->
                <Setter Property="Label.FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="TextOptions.TextFormattingMode"
                        Value="Display" />
            </Style>
            <!--label style/-->




            <!--Navigation btn style-->
            <Style x:Key="NavigationBtn" TargetType="Button">

                <Setter Property="Foreground" Value="{DynamicResource SubMenuText}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border>
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource SubMenuTextHover}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource SubMenuTextSelected}"/>
                                    <!--<Setter Property="FontWeight" Value="Bold" />-->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--Navigation btn style /-->




            <!--TextBox Style-->
            <Style x:Key="Heading1" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontSize" Value="30" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            </Style>
            <Style x:Key="Heading2" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
            </Style>
            <Style x:Key="Title" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Segoe UI Light" />
                <Setter Property="FontSize" Value="23"/>
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            </Style>
            <Style x:Key="Small" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}"/>
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
            </Style>
            <Style x:Key="Emphasis" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}"/>
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
            </Style>
            <Style x:Key="Fixed" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="{DynamicResource FixedFontFamily}" />
                <Setter Property="FontSize" Value="{DynamicResource FixedFontSize}"/>
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
            </Style>
            <Style x:Key="ModernWindowTitle" TargetType="TextBlock">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="TextWrapping" Value="NoWrap" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
            </Style>
            <!--TextBox Style/-->

            


            <!--system button style-->
            <Style x:Key="SystemButtonBase" TargetType="ButtonBase">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SystemButton" TargetType="ButtonBase" BasedOn="{StaticResource SystemButtonBase}">
                <Setter Property="Width" Value="32" />
                <Setter Property="Height" Value="24" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonText}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="SystemCloseButton" TargetType="ButtonBase" BasedOn="{StaticResource SystemButton}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#e51400" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="BaseButtonStyle"
           TargetType="{x:Type ButtonBase}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Background"
                Value="{DynamicResource ButtonBackground}"/>
                <Setter Property="BorderBrush"
                Value="{DynamicResource ButtonBorder}"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="Foreground"
                Value="{DynamicResource ButtonText}"/>
                <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="Padding"
                Value="16,3,16,5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border Name="Chrome"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="true">
                                <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter TargetName="Chrome" Property="BorderBrush" Value="{DynamicResource Accent}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            
            
            
            <Style x:Key="{x:Type ToggleButton}"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type ToggleButton}"/>
            <Style x:Key="{x:Type RepeatButton}"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type RepeatButton}">
                <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>
            </Style>
            <Style x:Key="{x:Type Button}"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type Button}"/>
            <!--system button style/-->

            <Converters:ToUpperConverter x:Key="ToUpperConverter" />
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="Assets/Converters.xaml" />-->
                <ResourceDictionary Source="/Themes/Light.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
